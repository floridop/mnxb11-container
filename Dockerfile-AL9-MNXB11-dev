FROM almalinux:9.2

# Add Repositories
## Adding epel for screen and xclock 
RUN dnf -y install epel-release 

# Update repo db
RUN dnf -y update 

# Installing
## Various deps 
RUN dnf -y install vim man screen xclock xdg-utils xorg-x11-xauth 

## Deps for coding (e.g. building root
RUN dnf -y install patch libuuid libuuid-devel 

## Unix utilities 
RUN dnf -y install findutils  

## Compilation/Build tools
RUN dnf -y install git make cmake gcc-c++ gcc binutils clang clang-tools-extra

## Deps for building ROOT 
RUN dnf -y install libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel compat-openssl11 

## Python dependencies used in some of the tutorial exercises to generate data
RUN dnf -y python3-numpy

# Environment
## Dir for course specific material
ENV MNXB11_MNXB11DIR=/opt
## Dir for all downloads
ENV MNXB11_DOWNLOADS=${MNXB11_MNXB11DIR}/download
RUN mkdir ${MNXB11_DOWNLOADS}
## Dir for all sources, a subfolder for each source tree
ENV MNXB11_SOURCEDIR=${MNXB11_MNXB11DIR}/source
RUN mkdir $MNXB11_SOURCEDIR
## Dir for all builds, a subfolder for each build environment
ENV MNXB11_BUILDDIR=${MNXB11_MNXB11DIR}/build
RUN mkdir $MNXB11_BUILDDIR
## Dir for all binaries, a subfolder for each software
ENV MNXB11_APPS=${MNXB11_MNXB11DIR}/apps
RUN mkdir ${MNXB11_APPS}
## Dir for all scripts
ENV MNXB11_SCRIPTS=${MNXB11_MNXB11DIR}/scripts
RUN mkdir ${MNXB11_SCRIPTS}

# ROOT build
# Download sources
ADD https://root.cern/download/root_v6.28.04.source.tar.gz ${MNXB11_DOWNLOADS}/root_v6.28.04.source.tar.gz
# Unpack
RUN tar zxf ${MNXB11_DOWNLOADS}/root_v6.28.04.source.tar.gz -C ${MNXB11_SOURCEDIR}

# Add all scripts in a scripts folder where this is ran
ADD scripts/* ${MNXB11_SCRIPTS}/

# Run bash as the container starts
CMD ["/bin/bash"]

# Initialize environment a la Einar, I decided to hardcode the path here instead of moving stuff
# init.sh must be inside the scripts path as the other scripts
ENTRYPOINT ["/opt/scripts/init.sh"]

